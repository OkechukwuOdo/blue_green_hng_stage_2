worker_processes auto;
events { worker_connections 1024; }

http {
  upstream backend {
    zone backend 64k;

    # Blue (primary), Green (backup)
    server app_blue:3000 max_fails=1 fail_timeout=5s;
    server app_green:3000 backup;
  }

  server {
    listen 80;

    # Detect failure quickly
    proxy_connect_timeout 1s;
    proxy_send_timeout 2s;
    proxy_read_timeout 2s;

    # Retry to backup if Blue fails (timeout, 5xx)
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    proxy_next_upstream_tries 2;

    location / {
      proxy_pass http://backend;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # Forward headers from the Node apps
      proxy_pass_header X-App-Pool;
      proxy_pass_header X-Release-Id;
    }

    # Simple health check for Nginx
    location /healthz {
      return 200 "nginx-ok\n";
    }
  }
}
